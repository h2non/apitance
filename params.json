{"name":"Apitance","tagline":"Elegant, versatible and expressive BBD-style acceptance tests for HTTP APIs","body":"# apitance [![Build Status](https://api.travis-ci.org/h2non/apitance.svg?branch=master)][travis] [![Dependency Status](https://gemnasium.com/h2non/apitance.svg)][gemnasium] [![Code Climate](https://codeclimate.com/github/h2non/apitance/badges/gpa.svg)](https://codeclimate.com/github/h2non/apitance)  [![NPM](https://img.shields.io/npm/v/apitance.svg)][npm]\r\n\r\n<!--\r\n![Downloads](https://img.shields.io/npm/dm/apitance.svg)\r\n-->\r\n\r\n<img src=\"https://developer.atlassian.com/stash/docs/latest/images/home/section-rest.png\" width=\"180\" align=\"right\" />\r\n\r\n**Elegant**, **versatile** and **expressive** **BBD**-style **acceptance tests** for **HTTP APIs** based on Gherkin language and built-on-top of [Cucumber](http://cukes.info)\r\n\r\nJust write what you want and what you expect using Gherkin syntax.\r\nApitance provides a built-in reusable Cucumber descriptive steps which aims to cover all the test cases that involves an HTTP API\r\n\r\n> **Work in progress**\r\n\r\n<!--\r\n## Rationale\r\n-->\r\n\r\n## Features\r\n\r\n- Generic and reusable steps with expressiveness and multiple alias\r\n- Full HTTP protocol features support, including authentication, headers, cookies\r\n- High number of assert/expectation expressions for responses validation\r\n- Request/responses caching, reuse and chaining\r\n- Validate body responses against [JSON schema](http://json-schema.org/)\r\n- Support all the Cucumber.js features, such as hooks, configuration, stages...\r\n- Built-in support for templating and variables such as environment variables\r\n- Extended syntax with conditionals, control flow and more...\r\n- Send body payload data from external files or remote servers\r\n- Extending support. You can create or overwrite custom steps\r\n\r\n## Installation\r\n\r\nApitance requires you have installed [node.js](http://nodejs.org)\r\n\r\n```bash\r\n$ [sudo] npm install -g apitance\r\n```\r\n\r\n## Usage\r\n\r\n```bash\r\n$ apitance -r features/user.feature\r\n```\r\n\r\n## Steps\r\n\r\n#### Defining the request\r\n\r\n##### Method definition\r\n\r\n```gherkin\r\nGiven a request with method ([a-z]{3,7})\r\n```\r\n\r\n##### Headers\r\n```gherkin\r\nthe request header \"(.*)\" with value \"(.*)\"\r\n```\r\n\r\n```gherkin\r\nthe context type is \"(.*)\"\r\n```\r\n\r\n```gherkin\r\nthe accept MIME type is \"(.*)\"\r\n```\r\n\r\n##### Path\r\n```gherkin\r\nthe request path is (/path/test)\r\n```\r\n\r\n##### Query params\r\n```gherkin\r\ndefine a query string key (search) with value \"Chuck Norris\"\r\n```\r\n\r\n```gherkin\r\nit have the query string \"(.*)\"\r\n```\r\n\r\n##### Timers control\r\n\r\nMaximum timeout\r\n```gherkin\r\nrequest timeout is (\\d+) seconds\r\n```\r\n\r\nWait before send the request\r\n```gherkin\r\nAnd I wait (\\d+) seconds\r\n```\r\n\r\n##### Requests pool\r\n\r\n```gherkin\r\nAnd create a pool of 100 clients using a stack of 20 concurrent\r\n```\r\n```gherkin\r\nAnd wait 100 miliseconds on each pool\r\n```\r\n\r\n#### Response verification\r\n\r\n```\r\nThen status code should be (\\d+)\r\n```\r\n\r\n```\r\nThen status code is (\\d+)\r\n```\r\n\r\n## Command-line interface\r\n\r\nGetting help\r\n```bash\r\n$ apitance --help\r\n```\r\n\r\n```bash\r\n$ apitance -r path/to/steps path/to/feature\r\n```\r\n\r\n## Contributing\r\n\r\nWanna help? Cool!\r\n\r\n`apitance` is written in JavaScript Harmony (ECMAScript 6)\r\n\r\nYou must add new test cases for any new feature or refactor you do,\r\nalways following the same design/code patterns that already exist\r\n\r\n### Development\r\n\r\nOnly [node.js](http://nodejs.org) is required for development\r\n\r\nClone/fork this repository\r\n```\r\n$ git clone https://github.com/h2non/apitance.git && cd apitance\r\n```\r\n\r\nInstall dependencies\r\n```\r\n$ npm install\r\n```\r\n\r\nCompile code\r\n```\r\n$ make compile\r\n```\r\n\r\nRun tests\r\n```\r\n$ make test\r\n```\r\n\r\n## License\r\n\r\n[MIT](http://opensource.org/licenses/MIT) Â© Tomas Aparicio\r\n\r\n[travis]: http://travis-ci.org/h2non/apitance\r\n[gemnasium]: https://gemnasium.com/h2non/apitance\r\n[npm]: http://npmjs.org/package/apitance\r\n[glob]: https://github.com/isaacs/node-glob\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}